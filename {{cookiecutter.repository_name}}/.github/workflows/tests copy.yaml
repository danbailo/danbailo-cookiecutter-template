name: Linting and Tests

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  python:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: 'write'
      id-token: 'write'

    services:
      camunda:
        image: camunda/camunda-bpm-platform:7.17.0
        ports:
          - 8080:8080
        options: >
          --health-cmd="curl --fail http://localhost:8080/camunda-welcome/index.html || exit 1"


    strategy:
      matrix:
        python: ["3.11", "3.12", "3.13"]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Setup Poetry
      uses: snok/install-poetry@v1
      with:
        version: "1.8.3"

    - name: Install dependencies
      run: make install

    - name: Run linting check
      run: make check_lint

    - name: Run formatting check
      run: make check_format

    - name: Run types check
      run: make check_types

    - name: Run tests
      env:
        LOGGER_NAME: local
        TZ: America/Sao_Paulo
      run: make tests

    # TODO: Podemos fazer isso de forma mais dinâmica. Isso serve para corrigir concorrências para escrever esse arquivo.
    - name: Update coverage badge if necessary when last version
      if: ${{ matrix.python == '3.13' }}
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Updated coverage badge
        file_pattern: 'assets/coverage-badge.svg'
        skip_fetch: false
        skip_checkout: false

  kubernetes:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Polaris
      uses: fairwindsops/polaris/.github/actions/setup-polaris@master
      with:
        version: 5.0.0

    - name: Run kubernetes checks
      run: make kubernetes_check
