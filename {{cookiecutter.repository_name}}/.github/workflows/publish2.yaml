name: Publish and release package

on:
  pull_request:
    types: [closed]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  publish:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      NEXUS_REPOSITORY: https://nexus.apps.jusbr.com/repository/pypi-internal/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
  
      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
  
      - name: Install dependencies
        run: make install

      - name: Tag and push version
        run: |
          TAG_VERSION="v$(poetry version -s)"
          if git rev-parse "$TAG_VERSION" >/dev/null 2>&1; then
              echo "Tag already exists: $TAG_VERSION"
              echo "CREATED_TAG=false" >> $GITHUB_ENV
          else
              echo "Creating tag $TAG_VERSION ..."
              git tag "$TAG_VERSION"
              git push origin tag $TAG_VERSION
              echo "Tag $TAG_VERSION created and pushed with successfully!"

              echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
              echo "CREATED_TAG=true" >> $GITHUB_ENV
          fi

      - name: Echo enviroment variables created in runtime
        run: |
          echo "CREATED_TAG: ${{ env.CREATED_TAG }}"
          echo "TAG_VERSION: ${{ env.TAG_VERSION }}"

      - name: Create GitHub Release
        if: ${{ env.CREATED_TAG == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG_VERSION }}
          name: Release ${{ env.TAG_VERSION }}
          body: |
            ## O que mudou?
            ${{ github.event.pull_request.body }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Poetry credentials
        if: ${{ env.CREATED_TAG == 'true' }}
        run: |
          poetry config repositories.nexus-publish ${{ env.NEXUS_REPOSITORY }}
          poetry config http-basic.nexus-publish ${{ secrets.NEXUS_USERNAME }} ${{ secrets.NEXUS_PASSWORD }}

      - name: Build package
        if: ${{ env.CREATED_TAG == 'true' }}
        run: poetry build

      - name: Publish package
        if: ${{ env.CREATED_TAG == 'true' }}
        run: poetry publish -r nexus-publish

      - name: Send Slack alert
        if: ${{ env.CREATED_TAG == 'true' }}
        run: poetry run python -m jobs send-slack-alert-when-new-version -v ${{ env.TAG_VERSION }}
